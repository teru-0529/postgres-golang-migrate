version: "3.7"

services:
  app:
    build:
      context: .
      dockerfile: ./docker/golang/Dockerfile
    container_name: app
    volumes:
      - ./:/app
    command: ["go", "run", "src/cmd/main.go"]
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_PORT: ${POSTGRES_PORT}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      TZ: ${TIME_ZONE}
    depends_on:
      - db
    networks:
      - app_network

  db:
    image: postgres:16.0-alpine
    container_name: db
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_PORT}
    environment:
      TZ: ${TIME_ZONE}
      PGTZ: ${TIME_ZONE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    tty: true
    restart: always
    user: root
    # volumes:
    #   - ./init:/docker-entrypoint-initdb.d
    #   - postgres_data:/var/lib/postgresql/data/
    networks:
      - app_network

  pgweb:
    image: sosedoff/pgweb
    container_name: pgweb
    ports:
      - ${PGWEB_HOST_PORT}:${PGWEB_PORT}
    environment:
      TZ: ${TIME_ZONE}
      PGTZ: ${TIME_ZONE}
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable
    restart: always
    depends_on:
      - db
    networks:
      - app_network

networks:
  app_network:
